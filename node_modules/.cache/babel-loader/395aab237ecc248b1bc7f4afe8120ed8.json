{"ast":null,"code":"var _jsxFileName = \"/Users/pierrecherbero/code/Peyochanchan/msnickki/src/components/VideoList.js\";\nimport React from \"react\";\nimport VideoItem from \"./VideoItem\";\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoList extends React.Component {\n  renderList() {\n    if (!this.props.videos) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this);\n    }\n\n    return this.props.videos.map(video => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(VideoItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          onClick: () => this.props.selectVideo(video),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui divided list\",\n      children: this.renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    videos: state.selectedVideos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectVideo\n})(VideoList);\n/* const VideoList = ({ videos, onVideoSelect }) => {\n  const renderedList = videos.map(video => {\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        onVideoSelect={onVideoSelect}\n        video={video}\n      />\n    );\n  });\n\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n*/","map":{"version":3,"sources":["/Users/pierrecherbero/code/Peyochanchan/msnickki/src/components/VideoList.js"],"names":["React","VideoItem","connect","selectVideo","VideoList","Component","renderList","props","videos","map","video","title","render","mapStateToProps","state","selectedVideos"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,UAAU,GAAG;AACV,QAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACF,WAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,0BACE;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWJ,WAAX,CAAuBO,KAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBAA0BA,KAAK,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbM,CAAP;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkC,KAAKN,UAAL;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAvBqC;;AA0BxC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEN,IAAAA,MAAM,EAAEM,KAAK,CAACC;AAAhB,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,SAA1C,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport VideoItem from \"./VideoItem\";\n\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../actions\";\n\nclass VideoList extends React.Component {\n  renderList() {\n     if (!this.props.videos) {\n      <div>Select</div>\n     }\n    return this.props.videos.map((video) => {\n      return (\n        <div>\n          <VideoItem />\n          <button\n            className=\"ui button primary\"\n            onClick={() => this.props.selectVideo(video)}\n          >\n            Select\n          </button>\n          <div className=\"content\">{video.title}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { videos: state.selectedVideos };\n};\n\nexport default connect(mapStateToProps, { selectVideo })(VideoList);\n\n/* const VideoList = ({ videos, onVideoSelect }) => {\n  const renderedList = videos.map(video => {\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        onVideoSelect={onVideoSelect}\n        video={video}\n      />\n    );\n  });\n\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n*/\n"]},"metadata":{},"sourceType":"module"}